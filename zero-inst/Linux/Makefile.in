ifneq ($(KERNELRELEASE),)
	# We're building for Linux 2.6 from kconfig
	obj-m	:= lazyfs.o
else

.SUFFIXES:

KERNEL := @KERNELDIR@
KERNEL_TYPE := @KERNEL_TYPE@
prefix = @prefix@
srcdir = @srcdir@
VPATH = @srcdir@
ROOT_PREFIX = @ROOT_PREFIX@
MODULEDIR = $(ROOT_PREFIX)/lib/modules/`uname -r`/kernel/fs/lazyfs

all: lazyfs.o

CC	 := @CC@
CFLAGS   := -O2 -Wall -Wstrict-prototypes -g

UMFLAGS := -I${KERNEL}/arch/um/include -I${KERNEL}/arch/um/kernel/tt/include -I${KERNEL}/arch/um/kernel/skas/include -DARCH=um

clean:
	rm -f lazyfs.o

KERNELFLAGS := -Werror -I${KERNEL}/include -Wno-trigraphs -fno-strict-aliasing -fno-common -Wall -Wstrict-prototypes -O2 -Wall # ${UMFLAGS}
MODFLAGS := -DMODULE -D__KERNEL__

install: lazyfs.o
	mkdir -p ${MODULEDIR}
	cp lazyfs.o ${MODULEDIR}/lazyfs-@VERSION@.o
	[ -n "${ROOT_PREFIX}" ] || ${MAKE} real-install

real-install:
	depmod -a
	echo Stopping existing daemon...
	/etc/init.d/0install stop || echo '(not already running)'
	[ ! -L /uri/0install/.lazyfs-cache ] || umount -l /uri/0install
	lsmod | grep '^lazyfs' | awk '{print $$1}' | xargs rmmod || echo "*** Old LazyFS module is still in use. You should remove it later."

uninstall:
	rm -f ${MODULEDIR}/lazyfs*.o

.PHONY: module-Linux_2_4 module-Linux_2_6
lazyfs.o: lazyfs.c
	make module-${KERNEL_TYPE}

module-Linux_2_4:
	${CC} -I. -I$(srcdir) -c ${KERNELFLAGS} ${MODFLAGS} -o lazyfs.o $(srcdir)/lazyfs.c

module-Linux_2_6:
	$(MAKE) -C $(KERNEL) SUBDIRS=`pwd` modules

distclean: clean

distdir dvi check installcheck:

endif
