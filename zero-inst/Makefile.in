KERNEL := @KERNELDIR@
MODULEDIR := /lib/modules/`uname -r`/kernel/fs/lazyfs

TESTS := hello_glib
GLIB := /uri/http/zero-install.sf.net/libs/glib/2.2.1/Linux-i386
PKG_CONFIG_PATH=${GLIB}/lib/pkgconfig

ZERO_OBJECTS := zero-install.o support.o child.o control.o

all: lazyfs.o zero-install 0show #${TESTS}

CC	 := @CC@
CFLAGS   := -O2 -Wall -Wstrict-prototypes -g

UMFLAGS := -I${KERNEL}/arch/um/include -I${KERNEL}/arch/um/kernel/tt/include -I${KERNEL}/arch/um/kernel/skas/include -DARCH=um

clean:
	rm -f *.o hello_glib zero-install

KERNELFLAGS := -I${KERNEL}/include -Wno-trigraphs -fno-strict-aliasing -fno-common -Wall -Wstrict-prototypes
MODFLAGS := -DMODULE -D__KERNEL__

install:
	mkdir -p ${MODULEDIR}
	cp lazyfs.o ${MODULEDIR}/
	depmod -a
	[ -d /uri ] || mkdir /uri
	[ -d /var/cache/zero-inst ] || mkdir /var/cache/zero-inst

lazyfs.o: lazyfs.c
	${CC} -c ${KERNELFLAGS} ${MODFLAGS} -o $@ $<

zero-install: ${ZERO_OBJECTS}
	${CC} -o $@ ${ZERO_OBJECTS}

# Test program using glib

hello_glib.o: hello_glib.c
	PKG_CONFIG_PATH=${PKG_CONFIG_PATH} ${CC} -c -Wall `pkg-config --cflags glib-2.0` -o $@ $<

hello_glib: hello_glib.o
	PKG_CONFIG_PATH=${PKG_CONFIG_PATH} gcc -Wl,--rpath=${GLIB}/lib `pkg-config --libs glib-2.0` -o $@ $<
