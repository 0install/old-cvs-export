<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<h2>Installation</h2>

<p>
Although the system makes installing other software very easy, the Zero
Install system itself still requires some work to install. You'll also
need to have <a href="http://freshmeat.net/depends/download-all/39759/">a few
other things</a> installed first (expat to parse the XML index files, wget to
download archives, tar, bzip2 and gzip to extract them, GPG to check they are
correctly signed, and D-BUS to report progress to graphical utilities). Most
systems will have these installed already, although you may be missing the
header files for expat (expat-dev). Note that, while you need libdbus
installed, you don't need any DBUS daemons running (we only use the library
part).
</p>

<div class='note'>
Note that you need D-BUS version 0.12 or 0.13. The just-released 0.20
is not yet supported.
</div>

<div class='note'>
<h3>Security and stability note</h3>
<p>
This software is still under development and has not yet been carefully
audited. Please do not run it on public machines (eg, in a school) where
malicious users could exploit bugs in it.
Please let me know if you find any problems. You could also install it under <a
href="http://user-mode-linux.sf.net">User Mode Linux</a> if you want to test
the kernel module in safety, although there have been no bugs discovered in
the last few versions.
</p>
</div>

<p>The Zero Install system requires a small Linux kernel module to provide
the /uri/0install directory. Like all kernel modules, you must
compile this using the actual kernel headers for the kernel you're actually
running. The easiest way to ensure this is to have compiled your own kernel
(eg, from <a href="http://kernel.org">kernel.org</a>) and be running that.
There are plenty of guides on the net if you don't feel confident about
compiling your own kernel. For example,
<a href="http://www.osnews.com/story.php?news_id=2949">The Very Verbose Guide
to Updating and Compiling Your Debian Kernel</a> (which isn't very Debian
specific, despite the name) and
<a href="http://www.osnews.com/story.php?news_id=443">Compiling the Linux
Kernel</a>.
</p>

<p>
Supported kernels are:
</p>
<ul>
<li> Linux 2.4 series</li>
<li> Linux 2.6 (tested with 2.6.0-pre7) - <strong>Experimental</strong></li>
</ul>
<p>
If you want to port the (small) module to other kernels (BSD, MacOS
X, etc) please get in touch.
</p>

<div class='note'>
<!--
<p>
Joachim Kupke has created
<a href="http://www-i1.informatik.rwth-aachen.de/~joachimk/debian/">Debian
packages</a> for Zero Install.
</p>

<p>
Add<br/><tt>deb http://www-i1.informatik.rwth-aachen.de/~joachimk debian/</tt>
<br/>to<br/><tt>/etc/apt/sources.list</tt><br/>and install using apt-get.
</p>
-->
There are some Debian packages at
<tt>http://www-i1.informatik.rwth-aachen.de/~joachimk/debian/</tt>, but
the version packaged (0.1.14) is now too old to work with the current index
format.
</div>
<!--
<div class='note'>
<strong>RedHat 9 users</strong> who are using the stock RedHat kernel can
<a href="http://prdownloads.sourceforge.net/zero-install/zero-install-rh9-0.1.7.tgz?download">download the RedHat 9 binary version</a>, then skip the
'configure' and 'make' steps below, continuing from the install step.
</div>
-->

<p>Start by <a href="http://prdownloads.sourceforge.net/zero-install/zero-install-0.1.18.tar.gz">downloading Zero Install</a> [ <a href="http://prdownloads.sourceforge.net/zero-install/zero-install-0.1.18.tar.gz.sig">GPG Sig</a> ]
(note that the links lead to a list of mirrors).
 Extract it, and move to the new directory (things you
type are shown in bold):
</p>

<pre>
$ <b>tar xzf zero-install-0.1.18.tar.gz</b>
$ <b>cd zero-install-0.1.18</b>
</pre>

<p>
The system has two parts: a kernel module, which handles all cached requests
itself, and a 'helper' application to fetch uncached stuff from the Internet.
For security reasons, it's better not to run the helper as root. So you'll
now need to choose a user to run the helper as. This could be your own user
name, or (<a href="http://sourceforge.net/mailarchive/message.php?msg_id=6386789">ideally</a>) you could create a new user just for this purpose. Run
configure with the name of your chosen user (here called 'zeroinst'):
</p>

<pre>
$ <b>./configure --with-user=zeroinst</b>
</pre>

<div class='note'>
<p>
If it doesn't work, it may tell you that it can't find the kernel headers.
You can use --with-kernel to tell it where they are, for example:
</p>

<pre>
$ <b>./configure --with-user=zeroinst --with-kernel=/home/fred/linux-2.4.20</b>
</pre>

<p>
If it can't find
<a href="http://freshmeat.net/projects/d-bus/?topic_id=809">D-BUS</a>,
you may need to do:
</p>
<pre>
$ <b>export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/local/lib/pkgconfig</b>
</pre>
<p>
first, if that's where you installed libdbus (for the bash shell; replace
<b>export</b> with <b>setenv</b> and replace '=' with a space if using tcsh).
</p>
</div>

<div class='note'>
If you want to test the system under <a
href="http://user-mode-linux.sf.net">User Mode Linux</a>, you'll need to use
the above command to tell it where the UML kernel sources are. After the
configure step, add <tt>${UMFLAGS}</tt> to the end of <tt>KERNELFLAGS</tt>
in the makefile.
</div>

<p>
The build and install it (use su to get root privileges):
</p>
<pre>
$ <b>make</b>
$ <b>su -c 'make install'</b>
</pre>

<div class='note'>
Note that you need D-BUS version 0.12 or 0.13. The just-released 0.20
is not yet supported.
</div>

<p>
This will copy the new lazyfs module under /lib/modules/, and create the
/uri/0install mount point and the /var/cache/zero-inst cache directory. It will
also add an entry to /etc/fstab to allow mounting /uri/0install easily. If you
were already running an older version, this step also remounts /uri/0install
and loads the new module.
</p>

<p>
Now, run the helper application (it will just wait, without doing anything).
You can look at <tt>/var/log/daemon.log</tt> (or whatever your system uses)
to see what it's doing. SuSE uses <tt>/var/log/messages</tt> instead.
</p>

<pre>
$ <b>su -c '/etc/init.d/0install start'</b>
Starting zero-install...
$ <b>tail /var/log/daemon.log</b>
Oct  5 16:00:16 everest zero-install: Started: using cache directory '/var/cache/zero-inst'
</pre>

<div class='note'>
On some systems, running 0install tries to log you in as the zero install
user instead of running the helper. Try using sudo or 'su -c' in the 0install
script file. Let us know if you find a solution!
</div>

<h2>Testing the installation</h2>

<p>
With the helper still running, try the following command:
</p>

<pre>
$ <b>cat /uri/0install/zero-install.sourceforge.net/demo/test.txt</b>
It worked!
</pre>

<div class='note'>
If you can't mount the /uri/0install filesystem, try running the 'dmesg'
command to view the kernel log. Usually, it means you've compiled the module
with different kernel headers, or with a different compiler version.
</div>

<p>
Users can see what they are currently downloading with the ZeroProgress
utility, itself available via Zero Install:
</p>

<pre>
$ <b>/uri/0install/zero-install.sourceforge.net/apps/ZeroProgress/AppRun &amp;</b>
Starting ZeroProgress...
Ready and waiting...
</pre>

<div class='note'>
Note that ZeroProgress requires the dbus-glib library, which is supplied as
part of libdbus. If you're using Debian packages, you need to install the
<tt>dbus-glib-1</tt> package.
</div>

<p>
No windows appear on the screen when you run this, but any futher downloads
will display a progress box. Note that the GTK library is not yet in
Zero Install, so you need to have that installed by traditional methods.
</p>

<p>
You can open the <a href="http://rox.sourceforge.net/phpwiki/index.php/ROX-Filer">ROX-Filer</a>
window shown on the main page using these commands (which also fetch the
filer itself through Zero Install):
</p>

<pre>
$ <b>alias rox=/uri/0install/rox.sourceforge.net/rox</b>
$ <b>rox /uri/0install/rox.sourceforge.net/apps</b>
</pre>

<!--
<p>
You can also find XFree86 4.3.1 in the `libs' directory. You can run either
the client applications (eg, xterm) with your current X server, or run the
X server itself (or both). Note that you may have to stare at a blank screen for
a while as the libraries are pulled in.
</p>
<pre>
$ <b>cd /uri/0install/zero-install.sourceforge.net/libs/XFree86/4.3.1/Linux-i386/bin</b>
$ <b>./XFree86 -version</b>
XFree86 Version 4.3.0
Release Date: 27 February 2003
# <b>./XFree86 :1</b>
</pre>
-->

<p>
Some example applications can be found in
<tt>/uri/0install/zero-install.sourceforge.net/demo</tt>.
</p>

<p>
Lots more software, including Mozilla, Python, Acrobat reader, pkg-config,
GTK, Java and NEdit, can be found in the directory
<tt>/uri/0install/www-i1.informatik.rwth-aachen.de</tt>.
</p>

<h3>Notes</h3>
<ul>
<li>I/O errors indicate that the helper failed to fetch the requested file.
Check <strong>/var/log/daemon.log</strong> for information. In future,
ZeroProgress will report this information.</li>
<li>When you reboot, /uri/0install is automatically mounted, but the
zero-install helper program is <strong>not</strong> run automatically.
Therefore, you will get I/O errors when trying to access anything new, until
you start the helper.
</li>
</ul>

<h2>Further reading</h2>

<p>Please see <a href="docs.html">the documentation</a> for more information.</p>

</html>
