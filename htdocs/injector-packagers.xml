<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<h2>The Injector: Packaging Guide</h2>

<p>
This guide shows how to make software available through <a href="injector.html">the injector</a>.
</p>

<h2>Interfaces and Implementations</h2>

<dl>
<dt>An interface</dt>
<dd>describes what something does (eg, "Simple text editor").</dd>

<dt>An implementation</dt>
<dd>is something that does it (eg, Edit-1.9.6 or Edit-1.9.7).</dd>
</dl>
<p>
In Zero Install, interfaces are named by globally unique URLs (like web pages). Some examples
of interfaces are:
</p>

<ul>
<li><a href="http://rox.sourceforge.net/2005/interfaces/Edit">http://rox.sourceforge.net/2005/interfaces/Edit</a></li>
<li><a href="http://rox.sourceforge.net/2005/interfaces/ROX-Lib">http://rox.sourceforge.net/2005/interfaces/ROX-Lib</a></li>
</ul>

<p>
Each <i>implementation</i> of an interface is identified by a cryptographic digest, eg:
</p>
<ul>
<li><b>sha1=235cb9dd77ef78ef2a79abe98f1fcc404bba4889</b></li>
<li><b>sha1=c86d09f1113041f5eaaa8c3d1416fcf4dad8e2e0</b></li>
</ul>

<div class="note">TODO: Some weaknesses in the SHA1 algorithm have recently been
discovered. At present, it is still strong enough for our use, but we should migrate
to another algorithm at some point.</div>

<p>
When we run a program (like Edit) we need to choose an implementation of every
interface on which it depends. Then, we need to tell the program where to find
them all; this process is known as <i>Dependency Injection</i> (or <i>Inversion
of Control</i>).</p>

<p>
Both tasks are handled by the injector. This takes as input an interface and
selects a set of implementations based on the user's policy.
</p>

<p>
The list of implementations of an interface is found by using the interface's name as a
URL and downloading the XML file it names (click on one of the interfaces above to see
what an interface file looks like).
</p>

<h2>Format of an interface file</h2>

<p>
An interface file is a GPG clear-signed XML file. The root &lt;interface&gt; element contains
information about the interface itself, and a list of implementations (covered below). Edit's
interface looks like this:
</p>

<pre><![CDATA[
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<?xml version="1.0" ?>
<interface last-modified="1110752708"
	   main="Edit/AppRun"
           uri="http://rox.sourceforge.net/2005/interfaces/Edit"
	   xmlns="http://zero-install.sourceforge.net/2004/injector/interface">
  [...]
</interface>
-----BEGIN PGP SIGNATURE-----
[...]
-----END PGP SIGNATURE-----
]]></pre>

<p>
The attributes on the root element are:
</p>

<dl>
<dt>last-modified</dt> <dd>the time in seconds since the Unix epoch when the file was last modified</dd>
<dt>uri</dt> <dd>the correct name for the interface (since there may be several URLs which will fetch this
interface; this is to ensure everyone uses the canonical name)</dd>
<dt>xmlns</dt> <dd>the XML namespace for all the elements (don't change this)</dd>
<dt>main</dt> <dd>(optional) an executable file inside each implementation which is used as the default
action when the user asks to run the interface</dd>
</dl>

<p>
The gpg signature is added to the XML by running <b>gpg --clearsign interface.xml</b>.
</p>

<h2>Interface details</h2>

<p>
Inside the root element are elements describing the interface. Edit has:
</p>

<pre><![CDATA[
<?xml version="1.0" ?>
<interface ...>
  <name>Edit</name>
  <summary>Simple text editor</summary>
  <description>
    Edit is a simple text editor, with a ROX-style user interface. It has drag-and-drop saving, search-and-replace and multi-level undo.
  </description>
]]></pre>

<p>
The summary is a short one-line message, while the description can be several paragraphs long.
Following the details is a list of implementations of the interface.
</p>

<h2>Implementations</h2>

<p>
An implementation (in the Zero Install sense) is always some particular
version, identified by a cryptographic hash of its contents (typically the
SHA1 digest of its manifest). Therefore, two releases with the same version
number are still considered as separate implementations if they differ in any
way.
</p>

<p>
Each implementation of an interface has a definition like this:
</p>

<pre><![CDATA[
<implementation id="sha1=00720a16dd9e38c8d29b844730e930db13dc0783"
		stability="stable" version="1.9.3">
]]></pre>

<p>
When adding a new implementation, you will need to know the SHA1 digest value to
use. Once the injector has downloaded your program, it will check that the digest
is correct to ensure that the archive hasn't been tampered with. You can find out
the digest my running <b>manifest.py</b> on the root directory of your unpacked
program:
</p>

<pre>
$ python /usr/lib/python2.3/site-packages/zeroinstall/zerostore/manifest.py myprog
[...]
sha1=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
</pre>

<div class="note">TODO: There should be an easier way to do this in the next version!</div>

<h2>Archives</h2>

<p>
For each implementation, you also need to tell the injector where it can download it. Here
is an example from Edit's interface:
</p>

<pre><![CDATA[
<implementation stability="stable" version="1.9.3" id="sha1=00720a16dd9e38c8d29b844730e930db13dc0783">
  <archive extract="edit-1.9.3" href="http://heanet.dl.sourceforge.net/sourceforge/rox/edit-1.9.3.tgz" size="24322"/>
</implementation>
]]></pre>

<p>
The <b>href</b> attribute is the URL which will be used to fetch the archive, which must be
a tgz archive. <b>size</b> is the size of the archive file, which used for the download progress
display (you can also set a <b>size</b> on the implementation; that is the uncompressed size).
</p>

<p>
The optional <b>extract</b> attribute tells the injector to extract a particular subdirectory
of the archive. This is useful because many archives contain only a single top-level directory;
we want the unpacked component to contain a directory called <b>Edit</b>, not
<b>edit-1.9.3/Edit</b>.
</p>

<p>
You might wonder why we don't just create an archive without the extra directory in the first
place. The reason is that the injector is designed to work with <i>existing</i> archives; Edit
1.9.3 pre-dates the injector by a long way, but the injector is able to use
Edit's original archive (and ROX-Lib's too!) without modifications.
</p>

<h2>Versions</h2>

<p>
A version is a dot-separated list of integers. Eg "1.2.3". It can be just a
single number ("1") or a sequence of any number of components ("1.4.2.3").
Versions are ordered like this:
</p>

<ul>
<li>0.1</li>
<li>1</li>
<li>1.1</li>
<li>1.2</li>
<li>1.2.1</li>
<li>1.2.1.4</li>
<li>1.2.2</li>
<li>1.2.10</li>
<li>3</li>
</ul>

<p>
The injector doesn't care about anything other than the sort order (ie, whether
one version comes before or after another). It is assumed that an
implementation can be safely replaced by one with a later version number, but
not with an earlier one. So, if you ask for "1.2.1" then you might get "1.2.2"
or "1.3" or even "5.7", but not "1.2.0". This is a little different to some
other systems, where numbers in different places have different meanings.
</p>

<p>
Incompatible changes (where a newer version cannot be used in place of an older
version) to an interface should be handled by creating a new interface. Eg:
</p>

<ul>
<li>http://gtk.org/2005/interfaces/GTK-1.2 (contains 1.2.0, 1.2.1, 1.2.2, ...)</li>
<li>http://gtk.org/2005/interfaces/GTK-2.0 (contains 2.0.0, 2.0.1, 2.2.0, 2.4.0, 2.4.1, ...)</li>
</ul>


<h2>Stability</h2>

<p>
The interface file also gives a stability rating for each implementation. The following
levels are allowed:
</p>

<ul>
<li>Stable</li>
<li>Testing</li>
<li>Developer</li>
<li>Buggy</li>
<li>Insecure</li>
</ul>

<p>
Stability ratings are kept independently of the implementations, and are expected to change over
time. When any new release is made, its stability should be set to <b>Testing</b>. Users who
have selected <b>Help test new versions</b> will then start using it. Other users will continue
with the previous stable release. After a while (days, weeks or months, depending on the project)
with no serious problems found, the implementation's stability can be changed to <b>Stable</b>
so that everyone will use it.
</p>

<p>
If problems are found, it can instead be marked as <b>Buggy</b>, or <b>Insecure</b>. The injector
won't select either by default, but it is useful to users to see the reason (users may opt to
continue using a buggy version if it seems to work for them, but they should never use an insecure
one). <b>Developer</b> is like a more extreme version of <b>Testing</b>, where the program is
expected to have bugs.
</p>

<h2>Groups</h2>
 
<p>
To avoid specifying the same information multiple times, the &lt;group&gt;
element can be used. Attributes set on a group are inherited by its child
elements. 'path' attributes may be relative, in which case they are relative
to the parent's path. Group may be nested inside other groups to any depth.
Using groups is simply a short-hand notation. Eg:
</p>
 
<pre><![CDATA[
  <group stability="stable">
    <implementation .../>
    <implementation .../>
    <implementation .../>
    <implementation .../>
  </group>
]]></pre>
 
<h2>Dependencies</h2>

<p>
The interface file also lists the dependencies of each implementation; the
injector locates an implementation of each dependency, recursively. All
information about dependencies is handled at the interface level; this is
because the same implementation may be used in different ways. Also, for
software not specially designed for use with the injector, it allows us to keep
the implementation in its original form.
</p>

<p>
This diagram shows some dependencies for Memo (the dotted lines):
</p>

<p style='text-align: center'>
<img width="554" height="345" src="depend.png"
     alt='Interface files give implementations and dependencies' />
</p>

<p>
Here is an extract from Edit's interface which gets the injector to find an
implementation of ROX-Lib:
</p>

<pre><![CDATA[
    <requires interface="http://rox.sourceforge.net/2005/interfaces/ROX-Lib">
      <version min="1.9.6"/>
      <environment insert="ROX-Lib2/python" name="PYTHONPATH"/>
    </requires>
]]></pre>

<div class='note'>TODO: &lt;version&gt; is currently ignored.</div>

<p>
The &lt;requires&gt; element names an interface which is required by all the implementations
in this group. 
The &lt;environment&gt; element inside tells the injector how to make its
choice known to Edit. In this case, it is by inserting
<b>/path/of/cache/sha1=XXX/python</b> to the beginning of <b>PYTHONPATH</b>.
</p>


</html>
